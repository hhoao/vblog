<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hhoa.blog.mgb.mapper.UmsAccountMapper">
  <resultMap id="BaseResultMap" type="com.hhoa.blog.mgb.model.UmsAccount">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="unreadCount" jdbcType="INTEGER" property="unreadcount" />
    <result column="notifyCount" jdbcType="INTEGER" property="notifycount" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, password, username, status, icon, role_id, title, introduce, unreadCount, notifyCount, 
    country, address, phone, signature
  </sql>
  <select id="selectByExample" parameterType="com.hhoa.blog.mgb.model.UmsAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ums_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ums_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ums_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hhoa.blog.mgb.model.UmsAccountExample">
    delete from ums_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hhoa.blog.mgb.model.UmsAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ums_account (password, username, status, 
      icon, role_id, title, 
      introduce, unreadCount, notifyCount, 
      country, address, phone, 
      signature)
    values (#{password,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, 
      #{icon,jdbcType=VARCHAR}, #{roleId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{introduce,jdbcType=VARCHAR}, #{unreadcount,jdbcType=INTEGER}, #{notifycount,jdbcType=INTEGER}, 
      #{country,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{signature,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hhoa.blog.mgb.model.UmsAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ums_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="password != null">
        password,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="unreadcount != null">
        unreadCount,
      </if>
      <if test="notifycount != null">
        notifyCount,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="signature != null">
        signature,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="unreadcount != null">
        #{unreadcount,jdbcType=INTEGER},
      </if>
      <if test="notifycount != null">
        #{notifycount,jdbcType=INTEGER},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hhoa.blog.mgb.model.UmsAccountExample" resultType="java.lang.Long">
    select count(*) from ums_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ums_account
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.password != null">
        password = #{row.password,jdbcType=VARCHAR},
      </if>
      <if test="row.username != null">
        username = #{row.username,jdbcType=VARCHAR},
      </if>
      <if test="row.status != null">
        status = #{row.status,jdbcType=BIT},
      </if>
      <if test="row.icon != null">
        icon = #{row.icon,jdbcType=VARCHAR},
      </if>
      <if test="row.roleId != null">
        role_id = #{row.roleId,jdbcType=BIGINT},
      </if>
      <if test="row.title != null">
        title = #{row.title,jdbcType=VARCHAR},
      </if>
      <if test="row.introduce != null">
        introduce = #{row.introduce,jdbcType=VARCHAR},
      </if>
      <if test="row.unreadcount != null">
        unreadCount = #{row.unreadcount,jdbcType=INTEGER},
      </if>
      <if test="row.notifycount != null">
        notifyCount = #{row.notifycount,jdbcType=INTEGER},
      </if>
      <if test="row.country != null">
        country = #{row.country,jdbcType=VARCHAR},
      </if>
      <if test="row.address != null">
        address = #{row.address,jdbcType=VARCHAR},
      </if>
      <if test="row.phone != null">
        phone = #{row.phone,jdbcType=VARCHAR},
      </if>
      <if test="row.signature != null">
        signature = #{row.signature,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ums_account
    set id = #{row.id,jdbcType=BIGINT},
      password = #{row.password,jdbcType=VARCHAR},
      username = #{row.username,jdbcType=VARCHAR},
      status = #{row.status,jdbcType=BIT},
      icon = #{row.icon,jdbcType=VARCHAR},
      role_id = #{row.roleId,jdbcType=BIGINT},
      title = #{row.title,jdbcType=VARCHAR},
      introduce = #{row.introduce,jdbcType=VARCHAR},
      unreadCount = #{row.unreadcount,jdbcType=INTEGER},
      notifyCount = #{row.notifycount,jdbcType=INTEGER},
      country = #{row.country,jdbcType=VARCHAR},
      address = #{row.address,jdbcType=VARCHAR},
      phone = #{row.phone,jdbcType=VARCHAR},
      signature = #{row.signature,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hhoa.blog.mgb.model.UmsAccount">
    update ums_account
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="unreadcount != null">
        unreadCount = #{unreadcount,jdbcType=INTEGER},
      </if>
      <if test="notifycount != null">
        notifyCount = #{notifycount,jdbcType=INTEGER},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hhoa.blog.mgb.model.UmsAccount">
    update ums_account
    set password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      icon = #{icon,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      unreadCount = #{unreadcount,jdbcType=INTEGER},
      notifyCount = #{notifycount,jdbcType=INTEGER},
      country = #{country,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>